
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   Function: DesignCode
%
%   Parameters: driverWeight (kg), corneringRadius (m),
%   suspensionFeel
% 
%
%   Description: DesignCode coordinates all the subfunctions and outputs all of the 
%   calculated parameters to the equation solidworks files  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function DesignCode(driverWeight, corneringRadius, suspensionFeel)
   
    % Adding all necessary paths
    addpath('H:\groupFSAE2\MATLAB\Subfunctions\outputEquations');
    addpath('H:\groupFSAE2\MATLAB\Subfunctions\chassis');
    addpath('H:\groupFSAE2\MATLAB\Subfunctions\suspension');
    addpath('H:\groupFSAE2\MATLAB\Subfunctions\modelling');
    addpath('H:\groupFSAE2\MATLAB\Subfunctions\steering');
    
    % Output log file location
    logFile = 'H:\groupFSAE2\Log\groupFSAE2_LOG.txt';
    
    fileID = fopen(logFile,'wt+'); % Open logFile for reading and writing. If the file exists, its contents are erased
    % Writing values to file
    fprintf(fileID,'************************************************************************\n');
    fprintf(fileID,'              Input Parameters \n');
    fprintf(fileID,'************************************************************************\n');
    fprintf(fileID,strcat('Mass of the driver =',32,num2str(driverWeight),' kg\n'));
    fprintf(fileID,strcat('Cornering Radius =',32,num2str(corneringRadius),' m\n'));
    fprintf(fileID,strcat('Suspension damper amount =',32,num2str(suspensionFeel),' \n'));
    fclose(fileID); % Close file
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %                   Constants
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
    gravity = 9.81; % m/s^2
    coefficientDrag = 0.92;
    radiusOfTire = 0.25527; % m
    maxVelocity = 105/3.6; %m/s
    densityAir = 1.225; % kg/m^3
    trackWidth = 1.2538; % m
    
    frontalAreaCar = 1.5412; % m^2
    frontalAreaRearWing = 0.6425; % m^2
    frontalAreaFrontWing = 0.5312; % m^2
    coefficientLift = 0.29;
    coefficientLiftWing = 2.34;
    coefficientWing = 3.074;
    coefficientRoad = 0.9;
    
    shaftDiameterInner = 0.025; %m
    steeringWheelRadius = 0.1; %m
    
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %                   Calculations
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
    % Calculate the tube thickness of the chassis
    [OutterradiustubeA, InnerradiustubeA, OutterWidthtubeB, InnerWidthtubeB] = calcChassisTubeThickness(driverWeight);
    
    % Calculate the center of mass and other important variables
    [totalMass, lengthCOMToRearTire, lengthCOMToFrontTire, COMFromGroundX, COMFromGroundY, COMFromGroundZ, lengthCOMToFrontWing, lengthCOMToRearWing, heightCOMToFrontWing, heightCOMToRearWing, lengthToRightWheelCOM, lengthToLeftWheelCOM, sprungMass, unsprungMass] = calcCenterOfMass(driverWeight);
    
    % Complete the modelling of the vehicle to determine important normal
    % forces
    [normalForceFrontWheel, normalForceRearWheel, normalForceFrontAcceleration, normalForceRearAcceleration, normalForceFrontStatic, normalForceRearStatic, fxLeftWheelFront, fxLeftWheelRear, fyLeftWheelFront, fyLeftWheelRear, fzLeftWheelFront, fzLeftWheelRear, frontBias, rearBias] = calcModeling(...
        totalMass,...
        lengthCOMToRearTire,...
        lengthCOMToFrontTire,...
        COMFromGroundX,...
        COMFromGroundY,...
        COMFromGroundZ,...
        lengthCOMToFrontWing,...
        lengthCOMToRearWing,...
        heightCOMToFrontWing,...
        heightCOMToRearWing,...
        lengthToRightWheelCOM,...
        lengthToLeftWheelCOM,...
        densityAir,...
        coefficientWing,...
        frontalAreaFrontWing,...
        frontalAreaRearWing,...
        coefficientLift,...
        coefficientLiftWing,...
        coefficientDrag,...
        coefficientRoad,...
        frontalAreaCar,...
        maxVelocity,...
        gravity);
    
    % Complete the modelling of the steering and output the rack length
    % and the inner diameter of the steering shaft
    [rackLength, shaftDiameterInner] = calcSteering(...
    totalMass,...
    corneringRadius,...
    steeringWheelRadius,...
    normalForceFrontStatic,...
    lengthCOMToRearTire,...
    lengthCOMToFrontTire,...
    COMFromGroundX,...
    COMFromGroundY,...
    COMFromGroundZ,...
    lengthCOMToFrontWing,... 
    lengthCOMToRearWing,...
    heightCOMToFrontWing,...
    heightCOMToRearWing,...
    lengthToRightWheelCOM,...
    lengthToLeftWheelCOM,...
    densityAir,...
    coefficientWing,...
    frontalAreaFrontWing,...
    frontalAreaRearWing,...
    shaftDiameterInner,...
    coefficientLift,...
    coefficientDrag,...
    coefficientRoad,...
    frontalAreaCar,...
    maxVelocity,...
    trackWidth,...
    gravity);

    % Complete the modelling of the suspension to get the innerDiameter of the control arm, damper wall thickness,
    % diameter of the orifice, mean coil diameter, and wire diameter
    [innerDiameter, damperwallThickness, innerHousingDiameterOfDamper, orificeDiameter, meanCoilDiameter, wireDiameter] = calcSuspension(...
    fxLeftWheelFront,...
    fxLeftWheelRear,...
    fyLeftWheelFront,...
    fyLeftWheelRear,...
    fzLeftWheelFront,...
    fzLeftWheelRear,...
    sprungMass,...
    unsprungMass,...
    frontBias,...
    rearBias,...
    suspensionFeel);

   
    %Declaring text files to be modified
    log_file = 'H:\\groupFSAE2\\Log\\groupFSAE2_LOG.TXT';
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %                   Output Parameters
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    % Output each parameter to their corresponding solidworks
    % equation file
    outputChassis(InnerradiustubeA, InnerWidthtubeB);
    outputControlArm(innerDiameter);
    outputDamperHousing(damperwallThickness, innerHousingDiameterOfDamper);
    outputOrificeDiameter(orificeDiameter);
    outputRackEnd(rackLength*1000);
    outputRackLength(rackLength*1000);
    outputSecondaryShaft(shaftDiameterInner*1000);
    outputSpring(meanCoilDiameter, wireDiameter);
    
end